

generator client {
  provider = "prisma-client-js"

}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}
model Post {
  id        String   @id @default(cuid())
  title     String
  content   String?
  published Boolean  @default(false)
  author    User?    @relation(fields: [authorId], references: [id])
  authorId  String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@index([title, published])
}

model User {
  id        String   @id @default(cuid())
  discordId String @unique
  discordUsername String
  discordAvatar String?
  accessToken String
  refreshToken String

  posts     Post[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  connectedServers ConnectedServer[]
  scheduledPosts ScheduledPost[]
}

model ConnectedServer{
  id String @id @default(cuid())
  userId String
  guildId String
  guildName String
  guildIcon String?
  channelId String?
  channelName String?
  createdAt DateTime @default(now())
  user User @relation(fields: [userId], references: [id])
  post ScheduledPost[]

  @@unique([userId, guildId])
}

model ScheduledPost{
  id String @id @default(cuid())
  userId String
  serverId String
  channelId String

  description String
  generatedContent String?
  imageUrls String[]

  scheduledFor DateTime
  status Status @default(SCHEDULED)
  postedAt DateTime?
  discordMessageId String?

  error String?
  retryCount Int @default(0)

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  user User @relation(fields: [userId], references: [id])
  server ConnectedServer @relation(fields: [serverId], references: [id])
  @@index([status])
}

enum Status{
  SCHEDULED
  POSTED
  FAIL

}